syntax = "proto3";

import "google/api/annotations.proto";

option go_package="beprj/src";

package backendProto;

service UniversityFunc{

   rpc AddCourse(CourseDetails)returns(CourseDetails){
    option (google.api.http) = {
        post: "/addCourse"
        body: "*"
      };
   }//1
   rpc AddStudent(User)returns(User){
    option (google.api.http) = {
        post: "/addStudent"
        body: "*"
      };
   } //2
   rpc AddFaculty(User)returns(User){
    option (google.api.http) = {
        post: "/addFaculty"
        body: "*"
      };

   } //3
   rpc AddEnrollment(EnrollRequest)returns(Status){
    option (google.api.http) = {
        post: "/addEnrollment"
        body: "*"
      };
   } //4 
   rpc AddAssignment(Assignment)returns(Assignment){
    option (google.api.http) = {
        post: "/addAssignment"
        body: "*"
      };
   } //5
   rpc GetCourseByCourseId(CourseDetails) returns(CourseDetails){
    option (google.api.http) = {
        post: "/getCourseByCourseId"
        body: "*"
      };
   } //6 
   rpc GetStudentByEmail(User)returns(User){
    option (google.api.http) = {
        post: "/getStudent"
        body: "*"
      };
   } //7 done
   rpc GetFacultyByEmail(User)returns(User){
    option (google.api.http) = {
        post: "/getFaculty"
        body: "*"
      };
   } //8 done
   rpc GetAllCourses(Empty)returns(CourseList){
         option (google.api.http) = {
             post: "/users/courses"
             body: "*"
           };
   } //9 done
   rpc GetCoursesEnrolledByStudentEmail(User)returns(CourseList){
    option (google.api.http) = {
        post: "/getCoursesEnrolledByStudentEmail"
        body: "*"
      };
   } //10  done
   rpc GetCoursesByFacultyEmail(User)returns(CourseList){
    option (google.api.http) = {
        post: "/getCoursesByFacultyEmail"
        body: "*"
      };
   } //11 done
   rpc GetFacultyByCourseId(CourseDetails)returns(User){
    option (google.api.http) = {
        post: "/getFacultyByCourseId"
        body: "*"
      };
   } //12 done
   rpc GetStudentsEnrolledByCourseId(CourseDetails)returns(UserList){
    option (google.api.http) = {
        post: "/getStudentsEnrolledByCourseId"
        body: "*"
      };
   } //13 done
   rpc GetAssignmentsByCourseId(CourseDetails)returns(AssignmentList){
    option (google.api.http) = {
        post: "/getAssignmentsByCourseId"
        body: "*"
      };
   } //14 done

   rpc UpdateCourse(CourseDetails)returns(CourseDetails){
    option (google.api.http) = {
        post: "/updateCourse"
        body: "*"
      };
   } //15  done
   rpc UpdateAssignment(Assignment)returns(Assignment){
    option (google.api.http) = {
        post: "/updateAssignment"
        body: "*"
      };
   } //16 done
   

} 

message Empty{}

message Status{
    string Des=1;
    string Error=2;
}

message CourseDetails{
    int32 ID=1;
    string Name=2;
    int32 FacultyID=3;
    User Faculty=4;
    string Image=5;
}

message CourseList{
    repeated   CourseDetails Courses=1;
}

message User{
    int32  ID=1;
    string FirstName=2;
    string LastName=3;
    string Email=4;
    string Password=5;
}

message UserList{
    repeated User users=1;
}

message EnrollRequest{
    uint32 StudentID=1;
    uint32 CourseID=2;

}

message Assignment{
    int32 ID=1;
    string  Title=2;
	string  Description=3;
    string   Deadline=4;  
	int32 CourseId=5;  	  
    string progress=6;
}

message AssignmentList{
    repeated Assignment Assignments=1;
}
